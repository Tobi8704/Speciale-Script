# ============================================================================
# REORGANIZED IMPLEMENTATION OF COEFFICIENT STABILITY PLOTS AND PLACEBO TESTS
# ============================================================================

# First, define all common test functions
# [Keep your existing function definitions here]

# ============================================================================
# 1. H1: GREEN PARTY PARLIAMENTARY ENTRY EFFECT (MAIN HYPOTHESIS)
# ============================================================================

## 1.1 Coefficient Stability Plots for H1
h1_stability_plot <- create_coefficient_stability_plot(
  data = clean_data,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomials = c(1, 2, 3),
  covariates = c("country", "edate"),
  title = "H1: When green parties enter parliament, climate focus changes"
)
ggsave("h1_stability_plot.png", plot = h1_stability_plot$plot, width = 10, height = 6, dpi = 300)

## 1.2 Placebo Threshold Tests for H1
h1_placebo_threshold <- run_placebo_threshold_test(
  data = clean_data,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  true_cutpoint = 0,
  placebo_range = c(-4, 4),
  placebo_step = 0.5,
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)
h1_placebo_plot <- plot_placebo_threshold_test(
  h1_placebo_threshold,
  title = "H1: Placebo Threshold Test"
)
ggsave("h1_placebo_plot.png", plot = h1_placebo_plot, width = 10, height = 6, dpi = 300)

## 1.3 Outcome Placebo Tests for H1
placebo_vars <- c("rile_lowe")  # Use variables unaffected by treatment
h1_outcome_placebo <- run_outcome_placebo_test(
  data = clean_data,
  real_outcome_var = "miljø_afhængig",
  placebo_outcome_vars = placebo_vars,
  running_var = "centered_lagged_pervote_samlet",
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)
h1_outcome_placebo_plot <- plot_outcome_placebo_test(
  h1_outcome_placebo,
  title = "H1: Outcome Placebo Test"
)
ggsave("h1_outcome_placebo_plot.png", plot = h1_outcome_placebo_plot, width = 10, height = 6, dpi = 300)

## 1.4 Density Test for H1 (Manipulation Test)
# Add McCrary density test
h1_density_test <- rddensity(clean_data$centered_lagged_pervote_samlet, c = 0)
h1_density_test_summary <- summary(h1_density_test)
h1_density_plot <- rdplotdensity(h1_density_test, 
                               clean_data$centered_lagged_pervote_samlet,
                               title = "H1: Density Test of Running Variable")
ggsave("h1_density_test.png", plot = h1_density_plot$Estplot, width = 10, height = 6, dpi = 300)

## 1.5 Covariate Balance Tests for H1
# Add systematic balance tests for covariates
h1_balance_covariates <- c("rile_lowe", "GDP_per_capita", "Unemployment")
h1_balance_results <- data.frame(
  Covariate = character(),
  RDD_Estimate = numeric(),
  Std_Error = numeric(),
  P_value = numeric()
)
for (cov in h1_balance_covariates) {
  if (cov %in% names(clean_data)) {
    balance_check <- rdrobust(
      y = clean_data[[cov]],
      x = clean_data$centered_lagged_pervote_samlet,
      c = 0,
      p = 1,
      kernel = "triangular",
      bwselect = "mserd"
    )
    h1_balance_results <- rbind(h1_balance_results, data.frame(
      Covariate = cov,
      RDD_Estimate = balance_check$Estimate[1],
      Std_Error = balance_check$se[1],
      P_value = balance_check$pv[1]
    ))
  }
}
if (requireNamespace("knitr", quietly = TRUE)) {
  knitr::kable(h1_balance_results, 
               caption = "H1: Covariate Balance Tests")
}
write.csv(h1_balance_results, "h1_balance_tests.csv", row.names = FALSE)

## 1.6 Permutation Test for H1
h1_permutation <- run_permutation_test(
  data = clean_data,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  polynomial = 1,
  bandwidth = 2,
  n_permutations = 500,
  covariates = c("country", "edate")
)
h1_permutation_plot <- plot_permutation_test(
  h1_permutation,
  title = "H1: Permutation Test"
)
ggsave("h1_permutation_plot.png", plot = h1_permutation_plot, width = 10, height = 6, dpi = 300)

## 1.7 Two-Part Model for Zero-Inflation in H1
h1_two_part_plot <- create_two_part_model_visualization(
  data = clean_data,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)
ggsave("h1_two_part_model.png", plot = h1_two_part_plot, width = 10, height = 8, dpi = 300)

## 1.8 Quantile Regression for Heterogeneous Effects in H1
h1_quantile_effect_plot <- create_quantile_effect_plot(
  data = clean_data,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  quantiles = seq(0.1, 0.9, by = 0.1),
  covariates = c("country", "edate"),
  title = "H1: Heterogeneous Effects Across Quantiles"
)
ggsave("h1_quantile_effects.png", plot = h1_quantile_effect_plot, width = 10, height = 6, dpi = 300)

## 1.9 Kernel Sensitivity for H1 (NEW)
# Test sensitivity to different kernel functions
kernels <- c("triangular", "uniform", "epanechnikov")
h1_kernel_results <- data.frame(
  Kernel = character(),
  Estimate = numeric(),
  SE = numeric(),
  P_value = numeric()
)
for (k in kernels) {
  tryCatch({
    kernel_test <- rdrobust(
      y = clean_data$miljø_afhængig,
      x = clean_data$centered_lagged_pervote_samlet,
      c = 0,
      p = 1,
      kernel = k,
      h = 2
    )
    h1_kernel_results <- rbind(h1_kernel_results, data.frame(
      Kernel = k,
      Estimate = kernel_test$Estimate[1],
      SE = kernel_test$se[1],
      P_value = kernel_test$pv[1]
    ))
  }, error = function(e) {
    cat("Error with kernel", k, ":", e$message, "\n")
  })
}
if (requireNamespace("knitr", quietly = TRUE)) {
  knitr::kable(h1_kernel_results, 
               caption = "H1: Sensitivity to Kernel Choice")
}
write.csv(h1_kernel_results, "h1_kernel_sensitivity.csv", row.names = FALSE)

## 1.10 Donut-Hole RDD for H1 (NEW)
# Remove observations very close to threshold
donut_sizes <- c(0.1, 0.2, 0.3)
h1_donut_results <- data.frame(
  Donut_Size = numeric(),
  Estimate = numeric(),
  SE = numeric(),
  P_value = numeric()
)
for (d in donut_sizes) {
  donut_data <- subset(clean_data, abs(centered_lagged_pervote_samlet) > d)
  tryCatch({
    donut_test <- rdrobust(
      y = donut_data$miljø_afhængig,
      x = donut_data$centered_lagged_pervote_samlet,
      c = 0,
      p = 1,
      kernel = "triangular",
      h = 2
    )
    h1_donut_results <- rbind(h1_donut_results, data.frame(
      Donut_Size = d,
      Estimate = donut_test$Estimate[1],
      SE = donut_test$se[1],
      P_value = donut_test$pv[1]
    ))
  }, error = function(e) {
    cat("Error with donut size", d, ":", e$message, "\n")
  })
}
if (requireNamespace("knitr", quietly = TRUE)) {
  knitr::kable(h1_donut_results, 
               caption = "H1: Donut-Hole RDD Results")
}
write.csv(h1_donut_results, "h1_donut_results.csv", row.names = FALSE)

# ============================================================================
# 2. H2: RADICAL RIGHT PARTY PRESENCE EFFECT
# ============================================================================

## 2.1 Prepare Data for H2
data_no_rrp <- na.omit(subset(clean_data, rrp_i_p_lag1 == 0))
data_with_rrp <- na.omit(subset(clean_data, rrp_i_p_lag1 == 1))

## 2.2 Coefficient Stability Plots for H2
h2_no_rrp_plot <- create_coefficient_stability_plot(
  data = data_no_rrp,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomials = c(1, 2, 3),
  covariates = c("country", "edate"),
  title = "H2: No Radical Right Parties"
)
h2_with_rrp_plot <- create_coefficient_stability_plot(
  data = data_with_rrp,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomials = c(1, 2, 3),
  covariates = c("country", "edate"),
  title = "H2: With Radical Right Parties"
)
pdf("h2_no_rrp_plot.pdf", width = 10, height = 6)
print(h2_no_rrp_plot)
dev.off()
pdf("h2_with_rrp_plot.pdf", width = 10, height = 6)
print(h2_with_rrp_plot)
dev.off()

## 2.3 Comparison of RRP Effects Across Polynomials
h2_comparison_plot_p1 <- compare_coefficient_stability(
  data_list = list(data_no_rrp, data_with_rrp),
  labels = c("No Radical Right Parties", "Radical Right Parties in Parliament"),
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomial = 1,
  covariates = c("country", "edate"),
  title = "H2: Effect of Green Parties (Polynomial Order 1)"
)
# Continue for p2, p3, p4 similar to your existing code
if (requireNamespace("gridExtra", quietly = TRUE)) {
  h2_all_poly_comparison <- gridExtra::grid.arrange(
    h2_comparison_plot_p1, h2_comparison_plot_p2,
    h2_comparison_plot_p3, h2_comparison_plot_p4,
    ncol = 2, nrow = 2,
    top = "H2: Effect of Green Parties Moderated by Radical Right Parties"
  )
  ggsave("h2_all_polynomial_comparison.png", h2_all_poly_comparison, width = 12, height = 10, dpi = 300)
}

## 2.4 Placebo Threshold Tests for H2
h2_no_rrp_placebo <- run_placebo_threshold_test(
  data = data_no_rrp,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  true_cutpoint = 0,
  placebo_range = c(-4, 4),
  placebo_step = 0.5,
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)
h2_with_rrp_placebo <- run_placebo_threshold_test(
  data = data_with_rrp,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  true_cutpoint = 0,
  placebo_range = c(-4, 4),
  placebo_step = 0.5,
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)
h2_no_rrp_placebo_plot <- plot_placebo_threshold_test(
  h2_no_rrp_placebo,
  title = "H2: Placebo Test (No Radical Right Parties)"
)
h2_with_rrp_placebo_plot <- plot_placebo_threshold_test(
  h2_with_rrp_placebo,
  title = "H2: Placebo Test (With Radical Right Parties)"
)
ggsave("h2_no_rrp_placebo.png", plot = h2_no_rrp_placebo_plot, width = 10, height = 6, dpi = 300)
ggsave("h2_with_rrp_placebo.png", plot = h2_with_rrp_placebo_plot, width = 10, height = 6, dpi = 300)

## 2.5 Permutation Tests for H2
h2_no_rrp_permutation <- run_permutation_test(
  data = data_no_rrp,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  polynomial = 1,
  bandwidth = 2,
  n_permutations = 500,
  covariates = c("country", "edate")
)
h2_with_rrp_permutation <- run_permutation_test(
  data = data_with_rrp,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  polynomial = 1,
  bandwidth = 2,
  n_permutations = 500,
  covariates = c("country", "edate")
)
h2_no_rrp_permutation_plot <- plot_permutation_test(
  h2_no_rrp_permutation,
  title = "H2: Permutation Test (No Radical Right Parties)"
)
h2_with_rrp_permutation_plot <- plot_permutation_test(
  h2_with_rrp_permutation,
  title = "H2: Permutation Test (With Radical Right Parties)"
)
ggsave("h2_no_rrp_permutation.png", plot = h2_no_rrp_permutation_plot, width = 8, height = 10, dpi = 300)
ggsave("h2_with_rrp_permutation.png", plot = h2_with_rrp_permutation_plot, width = 8, height = 10, dpi = 300)

## 2.6 Two-Part Model for Zero-Inflation in H2
h2_no_rrp_two_part <- create_two_part_model_visualization(
  data = data_no_rrp,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)
h2_with_rrp_two_part <- create_two_part_model_visualization(
  data = data_with_rrp,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)
ggsave("h2_no_rrp_two_part.png", plot = h2_no_rrp_two_part, width = 10, height = 8, dpi = 300)
ggsave("h2_with_rrp_two_part.png", plot = h2_with_rrp_two_part, width = 10, height = 8, dpi = 300)

# ============================================================================
# 3. H3: ECONOMIC CONDITIONS EFFECT
# ============================================================================

## 3.1 Prepare Data for H3
# GDP growth variant
clean_data_high_gdp <- subset(final_dataset, high_gdp_growth == 1 & !is.na(miljø_afhængig))
clean_data_low_gdp <- subset(final_dataset, high_gdp_growth == 0 & !is.na(miljø_afhængig))

# Composite economic index variant
clean_data_good_economy <- subset(final_dataset, good_economy == 1 & !is.na(miljø_afhængig))
clean_data_bad_economy <- subset(final_dataset, good_economy == 0 & !is.na(miljø_afhængig))

## 3.2 Coefficient Stability Plots for H3 (GDP Growth)
high_gdp_stability_plot <- create_coefficient_stability_plot(
  data = clean_data_high_gdp,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomials = c(1, 2, 3),
  covariates = c("country", "edate"),
  title = "H3: Effect under High GDP Growth"
)

low_gdp_stability_plot <- create_coefficient_stability_plot(
  data = clean_data_low_gdp,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomials = c(1, 2, 3),
  covariates = c("country", "edate"),
  title = "H3: Effect under Low GDP Growth"
)

# Save plots
pdf("h3_high_gdp_stability.pdf", width = 10, height = 6)
print(high_gdp_stability_plot$plot)
dev.off()

pdf("h3_low_gdp_stability.pdf", width = 10, height = 6)
print(low_gdp_stability_plot$plot)
dev.off()

## 3.3 Coefficient Stability Plots for H3 (Economic Index)
good_economy_stability_plot <- create_coefficient_stability_plot(
  data = clean_data_good_economy,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomials = c(1, 2, 3),
  covariates = c("country", "edate"),
  title = "H3: Effect under Good Economic Conditions"
)

bad_economy_stability_plot <- create_coefficient_stability_plot(
  data = clean_data_bad_economy,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomials = c(1, 2, 3),
  covariates = c("country", "edate"),
  title = "H3: Effect under Poor Economic Conditions"
)

# Save plots
pdf("h3_good_economy_stability.pdf", width = 10, height = 6)
print(good_economy_stability_plot$plot)
dev.off()

pdf("h3_bad_economy_stability.pdf", width = 10, height = 6)
print(bad_economy_stability_plot$plot)
dev.off()

## 3.4 Direct Comparison of GDP Growth Effects
gdp_comparison_plot <- compare_coefficient_stability(
  data_list = list(clean_data_high_gdp, clean_data_low_gdp),
  labels = c("High GDP Growth", "Low GDP Growth"),
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomial = 1,
  covariates = c("country", "edate"),
  title = "H3: Effect of Green Parties Moderated by GDP Growth"
)

# Save comparison plot
ggsave("h3_gdp_comparison.png", plot = gdp_comparison_plot, width = 10, height = 6, dpi = 300)

## 3.5 Direct Comparison of Economic Index Effects
economy_comparison_plot <- compare_coefficient_stability(
  data_list = list(clean_data_good_economy, clean_data_bad_economy),
  labels = c("Good Economic Conditions", "Poor Economic Conditions"),
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomial = 1,
  covariates = c("country", "edate"),
  title = "H3: Effect of Green Parties Moderated by Economic Conditions"
)

# Save comparison plot
ggsave("h3_economy_comparison.png", plot = economy_comparison_plot, width = 10, height = 6, dpi = 300)

## 3.6 Multi-polynomial Comparisons
# GDP Growth with different polynomial orders
economy_comparison_plot_p1 <- compare_coefficient_stability(
  data_list = list(clean_data_high_gdp, clean_data_low_gdp),
  labels = c("High GDP Growth", "Low GDP Growth"),
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomial = 1,
  covariates = c("country", "edate"),
  title = "H3: Effect of Green Parties (Polynomial Order 1)"
)

economy_comparison_plot_p2 <- compare_coefficient_stability(
  data_list = list(clean_data_high_gdp, clean_data_low_gdp),
  labels = c("High GDP Growth", "Low GDP Growth"),
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomial = 2,
  covariates = c("country", "edate"),
  title = "H3: Effect of Green Parties (Polynomial Order 2)"
)

# Combine plots in grid if gridExtra is available
if (requireNamespace("gridExtra", quietly = TRUE)) {
  economy_poly_comparison <- gridExtra::grid.arrange(
    economy_comparison_plot_p1, economy_comparison_plot_p2,
    ncol = 2,
    top = "H3: Effect of Green Parties Moderated by GDP Growth"
  )
  
  # Save the combined plot
  ggsave("h3_gdp_polynomial_comparison.png", economy_poly_comparison, width = 12, height = 6, dpi = 300)
}

## 3.7 Placebo Threshold Tests for H3 (GDP Growth)
h3_high_gdp_placebo <- run_placebo_threshold_test(
  data = clean_data_high_gdp,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  true_cutpoint = 0,
  placebo_range = c(-4, 4),
  placebo_step = 0.5,
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)

h3_low_gdp_placebo <- run_placebo_threshold_test(
  data = clean_data_low_gdp,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  true_cutpoint = 0,
  placebo_range = c(-4, 4),
  placebo_step = 0.5,
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)

# Plot placebo results
h3_high_gdp_placebo_plot <- plot_placebo_threshold_test(
  h3_high_gdp_placebo,
  title = "H3: Placebo Test (High GDP Growth)"
)

h3_low_gdp_placebo_plot <- plot_placebo_threshold_test(
  h3_low_gdp_placebo,
  title = "H3: Placebo Test (Low GDP Growth)"
)

# Save placebo plots
ggsave("h3_high_gdp_placebo.png", plot = h3_high_gdp_placebo_plot, width = 10, height = 6, dpi = 300)
ggsave("h3_low_gdp_placebo.png", plot = h3_low_gdp_placebo_plot, width = 10, height = 6, dpi = 300)

## 3.8 Placebo Threshold Tests for H3 (Economic Index)
h3_good_economy_placebo <- run_placebo_threshold_test(
  data = clean_data_good_economy,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  true_cutpoint = 0,
  placebo_range = c(-4, 4),
  placebo_step = 0.5,
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)

h3_bad_economy_placebo <- run_placebo_threshold_test(
  data = clean_data_bad_economy,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  true_cutpoint = 0,
  placebo_range = c(-4, 4),
  placebo_step = 0.5,
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)

# Plot placebo results
h3_good_economy_placebo_plot <- plot_placebo_threshold_test(
  h3_good_economy_placebo,
  title = "H3: Placebo Test (Good Economic Conditions)"
)

h3_bad_economy_placebo_plot <- plot_placebo_threshold_test(
  h3_bad_economy_placebo,
  title = "H3: Placebo Test (Poor Economic Conditions)"
)

# Save placebo plots
ggsave("h3_good_economy_placebo.png", plot = h3_good_economy_placebo_plot, width = 10, height = 6, dpi = 300)
ggsave("h3_bad_economy_placebo.png", plot = h3_bad_economy_placebo_plot, width = 10, height = 6, dpi = 300)

## 3.9 Density Tests for H3 (GDP Growth)
# Add McCrary density test for high GDP growth
h3_high_gdp_density_test <- rddensity(clean_data_high_gdp$centered_lagged_pervote_samlet, c = 0)
h3_high_gdp_density_summary <- summary(h3_high_gdp_density_test)
h3_high_gdp_density_plot <- rdplotdensity(h3_high_gdp_density_test, 
                                        clean_data_high_gdp$centered_lagged_pervote_samlet,
                                        title = "H3: Density Test (High GDP Growth)")

# Add McCrary density test for low GDP growth
h3_low_gdp_density_test <- rddensity(clean_data_low_gdp$centered_lagged_pervote_samlet, c = 0)
h3_low_gdp_density_summary <- summary(h3_low_gdp_density_test)
h3_low_gdp_density_plot <- rdplotdensity(h3_low_gdp_density_test, 
                                       clean_data_low_gdp$centered_lagged_pervote_samlet,
                                       title = "H3: Density Test (Low GDP Growth)")

# Save density plots
ggsave("h3_high_gdp_density.png", plot = h3_high_gdp_density_plot$Estplot, width = 10, height = 6, dpi = 300)
ggsave("h3_low_gdp_density.png", plot = h3_low_gdp_density_plot$Estplot, width = 10, height = 6, dpi = 300)

## 3.10 Density Tests for H3 (Economic Index)
# Add McCrary density test for good economy
h3_good_economy_density_test <- rddensity(clean_data_good_economy$centered_lagged_pervote_samlet, c = 0)
h3_good_economy_density_summary <- summary(h3_good_economy_density_test)
h3_good_economy_density_plot <- rdplotdensity(h3_good_economy_density_test, 
                                            clean_data_good_economy$centered_lagged_pervote_samlet,
                                            title = "H3: Density Test (Good Economic Conditions)")

# Add McCrary density test for bad economy
h3_bad_economy_density_test <- rddensity(clean_data_bad_economy$centered_lagged_pervote_samlet, c = 0)
h3_bad_economy_density_summary <- summary(h3_bad_economy_density_test)
h3_bad_economy_density_plot <- rdplotdensity(h3_bad_economy_density_test, 
                                           clean_data_bad_economy$centered_lagged_pervote_samlet,
                                           title = "H3: Density Test (Poor Economic Conditions)")

# Save density plots
ggsave("h3_good_economy_density.png", plot = h3_good_economy_density_plot$Estplot, width = 10, height = 6, dpi = 300)
ggsave("h3_bad_economy_density.png", plot = h3_bad_economy_density_plot$Estplot, width = 10, height = 6, dpi = 300)

## 3.11 Covariate Balance Tests for H3 (GDP Growth)
# Define covariates to check
h3_balance_covariates <- c("rile_lowe", "GDP_per_capita", "Unemployment")

# High GDP Growth
h3_high_gdp_balance_results <- data.frame(
  Covariate = character(),
  RDD_Estimate = numeric(),
  Std_Error = numeric(),
  P_value = numeric()
)

for (cov in h3_balance_covariates) {
  if (cov %in% names(clean_data_high_gdp)) {
    tryCatch({
      balance_check <- rdrobust(
        y = clean_data_high_gdp[[cov]],
        x = clean_data_high_gdp$centered_lagged_pervote_samlet,
        c = 0,
        p = 1,
        kernel = "triangular",
        bwselect = "mserd"
      )
      
      h3_high_gdp_balance_results <- rbind(h3_high_gdp_balance_results, data.frame(
        Covariate = cov,
        RDD_Estimate = balance_check$Estimate[1],
        Std_Error = balance_check$se[1],
        P_value = balance_check$pv[1]
      ))
    }, error = function(e) {
      cat("Error checking balance for", cov, "in high GDP growth group:", e$message, "\n")
    })
  }
}

# Low GDP Growth
h3_low_gdp_balance_results <- data.frame(
  Covariate = character(),
  RDD_Estimate = numeric(),
  Std_Error = numeric(),
  P_value = numeric()
)

for (cov in h3_balance_covariates) {
  if (cov %in% names(clean_data_low_gdp)) {
    tryCatch({
      balance_check <- rdrobust(
        y = clean_data_low_gdp[[cov]],
        x = clean_data_low_gdp$centered_lagged_pervote_samlet,
        c = 0,
        p = 1,
        kernel = "triangular",
        bwselect = "mserd"
      )
      
      h3_low_gdp_balance_results <- rbind(h3_low_gdp_balance_results, data.frame(
        Covariate = cov,
        RDD_Estimate = balance_check$Estimate[1],
        Std_Error = balance_check$se[1],
        P_value = balance_check$pv[1]
      ))
    }, error = function(e) {
      cat("Error checking balance for", cov, "in low GDP growth group:", e$message, "\n")
    })
  }
}

# Print and save balance test results
if (requireNamespace("knitr", quietly = TRUE)) {
  knitr::kable(h3_high_gdp_balance_results, caption = "H3: Covariate Balance Tests (High GDP Growth)")
  knitr::kable(h3_low_gdp_balance_results, caption = "H3: Covariate Balance Tests (Low GDP Growth)")
}

write.csv(h3_high_gdp_balance_results, "h3_high_gdp_balance_tests.csv", row.names = FALSE)
write.csv(h3_low_gdp_balance_results, "h3_low_gdp_balance_tests.csv", row.names = FALSE)

## 3.12 Covariate Balance Tests for H3 (Economic Index)
# Good Economy
h3_good_economy_balance_results <- data.frame(
  Covariate = character(),
  RDD_Estimate = numeric(),
  Std_Error = numeric(),
  P_value = numeric()
)

for (cov in h3_balance_covariates) {
  if (cov %in% names(clean_data_good_economy)) {
    tryCatch({
      balance_check <- rdrobust(
        y = clean_data_good_economy[[cov]],
        x = clean_data_good_economy$centered_lagged_pervote_samlet,
        c = 0,
        p = 1,
        kernel = "triangular",
        bwselect = "mserd"
      )
      
      h3_good_economy_balance_results <- rbind(h3_good_economy_balance_results, data.frame(
        Covariate = cov,
        RDD_Estimate = balance_check$Estimate[1],
        Std_Error = balance_check$se[1],
        P_value = balance_check$pv[1]
      ))
    }, error = function(e) {
      cat("Error checking balance for", cov, "in good economy group:", e$message, "\n")
    })
  }
}

# Bad Economy
h3_bad_economy_balance_results <- data.frame(
  Covariate = character(),
  RDD_Estimate = numeric(),
  Std_Error = numeric(),
  P_value = numeric()
)

for (cov in h3_balance_covariates) {
  if (cov %in% names(clean_data_bad_economy)) {
    tryCatch({
      balance_check <- rdrobust(
        y = clean_data_bad_economy[[cov]],
        x = clean_data_bad_economy$centered_lagged_pervote_samlet,
        c = 0,
        p = 1,
        kernel = "triangular",
        bwselect = "mserd"
      )
      
      h3_bad_economy_balance_results <- rbind(h3_bad_economy_balance_results, data.frame(
        Covariate = cov,
        RDD_Estimate = balance_check$Estimate[1],
        Std_Error = balance_check$se[1],
        P_value = balance_check$pv[1]
      ))
    }, error = function(e) {
      cat("Error checking balance for", cov, "in bad economy group:", e$message, "\n")
    })
  }
}

# Print and save balance test results
if (requireNamespace("knitr", quietly = TRUE)) {
  knitr::kable(h3_good_economy_balance_results, caption = "H3: Covariate Balance Tests (Good Economy)")
  knitr::kable(h3_bad_economy_balance_results, caption = "H3: Covariate Balance Tests (Bad Economy)")
}

write.csv(h3_good_economy_balance_results, "h3_good_economy_balance_tests.csv", row.names = FALSE)
write.csv(h3_bad_economy_balance_results, "h3_bad_economy_balance_tests.csv", row.names = FALSE)

## 3.13 Permutation Tests for H3 (GDP Growth)
h3_high_gdp_permutation <- run_permutation_test(
  data = clean_data_high_gdp,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  polynomial = 1,
  bandwidth = 2,
  n_permutations = 500,
  covariates = c("country", "edate")
)

h3_low_gdp_permutation <- run_permutation_test(
  data = clean_data_low_gdp,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  polynomial = 1,
  bandwidth = 2,
  n_permutations = 500,
  covariates = c("country", "edate")
)

# Plot permutation test results
h3_high_gdp_permutation_plot <- plot_permutation_test(
  h3_high_gdp_permutation,
  title = "H3: Permutation Test (High GDP Growth)"
)

h3_low_gdp_permutation_plot <- plot_permutation_test(
  h3_low_gdp_permutation,
  title = "H3: Permutation Test (Low GDP Growth)"
)

# Save permutation plots
ggsave("h3_high_gdp_permutation.png", plot = h3_high_gdp_permutation_plot, width = 8, height = 6, dpi = 300)
ggsave("h3_low_gdp_permutation.png", plot = h3_low_gdp_permutation_plot, width = 8, height = 6, dpi = 300)

## 3.14 Permutation Tests for H3 (Economic Index)
h3_good_economy_permutation <- run_permutation_test(
  data = clean_data_good_economy,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  polynomial = 1,
  bandwidth = 2,
  n_permutations = 500,
  covariates = c("country", "edate")
)

h3_bad_economy_permutation <- run_permutation_test(
  data = clean_data_bad_economy,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  polynomial = 1,
  bandwidth = 2,
  n_permutations = 500,
  covariates = c("country", "edate")
)

# Plot permutation test results
h3_good_economy_permutation_plot <- plot_permutation_test(
  h3_good_economy_permutation,
  title = "H3: Permutation Test (Good Economy)"
)

h3_bad_economy_permutation_plot <- plot_permutation_test(
  h3_bad_economy_permutation,
  title = "H3: Permutation Test (Bad Economy)"
)

# Save permutation plots
ggsave("h3_good_economy_permutation.png", plot = h3_good_economy_permutation_plot, width = 8, height = 6, dpi = 300)
ggsave("h3_bad_economy_permutation.png", plot = h3_bad_economy_permutation_plot, width = 8, height = 6, dpi = 300)

## 3.15 Two-Part Model for Zero-Inflation in H3 (GDP Growth)
h3_high_gdp_two_part <- create_two_part_model_visualization(
  data = clean_data_high_gdp,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)

h3_low_gdp_two_part <- create_two_part_model_visualization(
  data = clean_data_low_gdp,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)

# Save two-part model plots
ggsave("h3_high_gdp_two_part.png", plot = h3_high_gdp_two_part, width = 10, height = 8, dpi = 300)
ggsave("h3_low_gdp_two_part.png", plot = h3_low_gdp_two_part, width = 10, height = 8, dpi = 300)

## 3.16 Two-Part Model for Zero-Inflation in H3 (Economic Index)
h3_good_economy_two_part <- create_two_part_model_visualization(
  data = clean_data_good_economy,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)

h3_bad_economy_two_part <- create_two_part_model_visualization(
  data = clean_data_bad_economy,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)

# Save two-part model plots
ggsave("h3_good_economy_two_part.png", plot = h3_good_economy_two_part, width = 10, height = 8, dpi = 300)
ggsave("h3_bad_economy_two_part.png", plot = h3_bad_economy_two_part, width = 10, height = 8, dpi = 300)

## 3.17 Quantile Regression Analysis for H3 (GDP Growth)
h3_high_gdp_quantile_effect <- create_quantile_effect_plot(
  data = clean_data_high_gdp,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  quantiles = seq(0.1, 0.9, by = 0.1),
  covariates = c("country", "edate"),
  title = "H3: Heterogeneous Effects Across Quantiles (High GDP Growth)"
)

h3_low_gdp_quantile_effect <- create_quantile_effect_plot(
  data = clean_data_low_gdp,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  quantiles = seq(0.1, 0.9, by = 0.1),
  covariates = c("country", "edate"),
  title = "H3: Heterogeneous Effects Across Quantiles (Low GDP Growth)"
)

# Save quantile effects plots
ggsave("h3_high_gdp_quantile_effects.png", plot = h3_high_gdp_quantile_effect, width = 10, height = 6, dpi = 300)
ggsave("h3_low_gdp_quantile_effects.png", plot = h3_low_gdp_quantile_effect, width = 10, height = 6, dpi = 300)

## 3.18 Quantile Regression Analysis for H3 (Economic Index)
h3_good_economy_quantile_effect <- create_quantile_effect_plot(
  data = clean_data_good_economy,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  quantiles = seq(0.1, 0.9, by = 0.1),
  covariates = c("country", "edate"),
  title = "H3: Heterogeneous Effects Across Quantiles (Good Economy)"
)

h3_bad_economy_quantile_effect <- create_quantile_effect_plot(
  data = clean_data_bad_economy,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  quantiles = seq(0.1, 0.9, by = 0.1),
  covariates = c("country", "edate"),
  title = "H3: Heterogeneous Effects Across Quantiles (Bad Economy)"
)

# Save quantile effects plots
ggsave("h3_good_economy_quantile_effects.png", plot = h3_good_economy_quantile_effect, width = 10, height = 6, dpi = 300)
ggsave("h3_bad_economy_quantile_effects.png", plot = h3_bad_economy_quantile_effect, width = 10, height = 6, dpi = 300)

## 3.19 Kernel Sensitivity for H3 (GDP Growth)
# Test sensitivity to different kernel functions
kernels <- c("triangular", "uniform", "epanechnikov")

# High GDP Growth
h3_high_gdp_kernel_results <- data.frame(
  Kernel = character(),
  Estimate = numeric(),
  SE = numeric(),
  P_value = numeric()
)

for (k in kernels) {
  tryCatch({
    kernel_test <- rdrobust(
      y = clean_data_high_gdp$miljø_afhængig,
      x = clean_data_high_gdp$centered_lagged_pervote_samlet,
      c = 0,
      p = 1,
      kernel = k,
      h = 2
    )
    h3_high_gdp_kernel_results <- rbind(h3_high_gdp_kernel_results, data.frame(
      Kernel = k,
      Estimate = kernel_test$Estimate[1],
      SE = kernel_test$se[1],
      P_value = kernel_test$pv[1]
    ))
  }, error = function(e) {
    cat("Error with kernel", k, "for high GDP growth:", e$message, "\n")
  })
}

# Low GDP Growth
h3_low_gdp_kernel_results <- data.frame(
  Kernel = character(),
  Estimate = numeric(),
  SE = numeric(),
  P_value = numeric()
)

for (k in kernels) {
  tryCatch({
    kernel_test <- rdrobust(
      y = clean_data_low_gdp$miljø_afhængig,
      x = clean_data_low_gdp$centered_lagged_pervote_samlet,
      c = 0,
      p = 1,
      kernel = k,
      h = 2
    )
    h3_low_gdp_kernel_results <- rbind(h3_low_gdp_kernel_results, data.frame(
      Kernel = k,
      Estimate = kernel_test$Estimate[1],
      SE = kernel_test$se[1],
      P_value = kernel_test$pv[1]
    ))
  }, error = function(e) {
    cat("Error with kernel", k, "for low GDP growth:", e$message, "\n")
  })
}

# Print and save kernel sensitivity results
if (requireNamespace("knitr", quietly = TRUE)) {
  knitr::kable(h3_high_gdp_kernel_results, caption = "H3: Kernel Sensitivity (High GDP Growth)")
  knitr::kable(h3_low_gdp_kernel_results, caption = "H3: Kernel Sensitivity (Low GDP Growth)")
}

write.csv(h3_high_gdp_kernel_results, "h3_high_gdp_kernel_sensitivity.csv", row.names = FALSE)
write.csv(h3_low_gdp_kernel_results, "h3_low_gdp_kernel_sensitivity.csv", row.names = FALSE)

## 3.20 Kernel Sensitivity for H3 (Economic Index)
# Good Economy
h3_good_economy_kernel_results <- data.frame(
  Kernel = character(),
  Estimate = numeric(),
  SE = numeric(),
  P_value = numeric()
)

for (k in kernels) {
  tryCatch({
    kernel_test <- rdrobust(
      y = clean_data_good_economy$miljø_afhængig,
      x = clean_data_good_economy$centered_lagged_pervote_samlet,
      c = 0,
      p = 1,
      kernel = k,
      h = 2
    )
    h3_good_economy_kernel_results <- rbind(h3_good_economy_kernel_results, data.frame(
      Kernel = k,
      Estimate = kernel_test$Estimate[1],
      SE = kernel_test$se[1],
      P_value = kernel_test$pv[1]
    ))
  }, error = function(e) {
    cat("Error with kernel", k, "for good economy:", e$message, "\n")
  })
}

# Bad Economy
h3_bad_economy_kernel_results <- data.frame(
  Kernel = character(),
  Estimate = numeric(),
  SE = numeric(),
  P_value = numeric()
)

for (k in kernels) {
  tryCatch({
    kernel_test <- rdrobust(
      y = clean_data_bad_economy$miljø_afhængig,
      x = clean_data_bad_economy$centered_lagged_pervote_samlet,
      c = 0,
      p = 1,
      kernel = k,
      h = 2
    )
    h3_bad_economy_kernel_results <- rbind(h3_bad_economy_kernel_results, data.frame(
      Kernel = k,
      Estimate = kernel_test$Estimate[1],
      SE = kernel_test$se[1],
      P_value = kernel_test$pv[1]
    ))
  }, error = function(e) {
    cat("Error with kernel", k, "for bad economy:", e$message, "\n")
  })
}

# Print and save kernel sensitivity results
if (requireNamespace("knitr", quietly = TRUE)) {
  knitr::kable(h3_good_economy_kernel_results, caption = "H3: Kernel Sensitivity (Good Economy)")
  knitr::kable(h3_bad_economy_kernel_results, caption = "H3: Kernel Sensitivity (Bad Economy)")
}

write.csv(h3_good_economy_kernel_results, "h3_good_economy_kernel_sensitivity.csv", row.names = FALSE)
write.csv(h3_bad_economy_kernel_results, "h3_bad_economy_kernel_sensitivity.csv", row.names = FALSE)

## 3.21 Donut-Hole RDD for H3 (GDP Growth)
# Remove observations very close to threshold
donut_sizes <- c(0.1, 0.2, 0.3)

# High GDP Growth
h3_high_gdp_donut_results <- data.frame(
  Donut_Size = numeric(),
  Estimate = numeric(),
  SE = numeric(),
  P_value = numeric()
)

for (d in donut_sizes) {
  donut_data <- subset(clean_data_high_gdp, abs(centered_lagged_pervote_samlet) > d)
  tryCatch({
    donut_test <- rdrobust(
      y = donut_data$miljø_afhængig,
      x = donut_data$centered_lagged_pervote_samlet,
      c = 0,
      p = 1,
      kernel = "triangular",
      h = 2
    )
    h3_high_gdp_donut_results <- rbind(h3_high_gdp_donut_results, data.frame(
      Donut_Size = d,
      Estimate = donut_test$Estimate[1],
      SE = donut_test$se[1],
      P_value = donut_test$pv[1]
    ))
  }, error = function(e) {
    cat("Error with donut size", d, "for high GDP growth:", e$message, "\n")
  })
}

# Low GDP Growth
h3_low_gdp_donut_results <- data.frame(
  Donut_Size = numeric(),
  Estimate = numeric(),
  SE = numeric(),
  P_value = numeric()
)

for (d in donut_sizes) {
  donut_data <- subset(clean_data_low_gdp, abs(centered_lagged_pervote_samlet) > d)
  tryCatch({
    donut_test <- rdrobust(
      y = donut_data$miljø_afhængig,
      x = donut_data$centered_lagged_pervote_samlet,
      c = 0,
      p = 1,
      kernel = "triangular",
      h = 2
    )
    h3_low_gdp_donut_results <- rbind(h3_low_gdp_donut_results, data.frame(
      Donut_Size = d,
      Estimate = donut_test$Estimate[1],
      SE = donut_test$se[1],
      P_value = donut_test$pv[1]
    ))
  }, error = function(e) {
    cat("Error with donut size", d, "for low GDP growth:", e$message, "\n")
  })
}

# Print and save donut hole results
if (requireNamespace("knitr", quietly = TRUE)) {
  knitr::kable(h3_high_gdp_donut_results, caption = "H3: Donut-Hole RDD Results (High GDP Growth)")
  knitr::kable(h3_low_gdp_donut_results, caption = "H3: Donut-Hole RDD Results (Low GDP Growth)")
}

write.csv(h3_high_gdp_donut_results, "h3_high_gdp_donut_results.csv", row.names = FALSE)
write.csv(h3_low_gdp_donut_results, "h3_low_gdp_donut_results.csv", row.names = FALSE)

## 3.22 Donut-Hole RDD for H3 (Economic Index)
# Good Economy
h3_good_economy_donut_results <- data.frame(
  Donut_Size = numeric(),
  Estimate = numeric(),
  SE = numeric(),
  P_value = numeric()
)

for (d in donut_sizes) {
  donut_data <- subset(clean_data_good_economy, abs(centered_lagged_pervote_samlet) > d)
  tryCatch({
    donut_test <- rdrobust(
      y = donut_data$miljø_afhængig,
      x = donut_data$centered_lagged_pervote_samlet,
      c = 0,
      p = 1,
      kernel = "triangular",
      h = 2
    )
    h3_good_economy_donut_results <- rbind(h3_good_economy_donut_results, data.frame(
      Donut_Size = d,
      Estimate = donut_test$Estimate[1],
      SE = donut_test$se[1],
      P_value = donut_test$pv[1]
    ))
  }, error = function(e) {
    cat("Error with donut size", d, "for good economy:", e$message, "\n")
  })
}

# Bad Economy
h3_bad_economy_donut_results <- data.frame(
  Donut_Size = numeric(),
  Estimate = numeric(),
  SE = numeric(),
  P_value = numeric()
)

for (d in donut_sizes) {
  donut_data <- subset(clean_data_bad_economy, abs(centered_lagged_pervote_samlet) > d)
  tryCatch({
    donut_test <- rdrobust(
      y = donut_data$miljø_afhængig,
      x = donut_data$centered_lagged_pervote_samlet,
      c = 0,
      p = 1,
      kernel = "triangular",
      h = 2
    )
    h3_bad_economy_donut_results <- rbind(h3_bad_economy_donut_results, data.frame(
      Donut_Size = d,
      Estimate = donut_test$Estimate[1],
      SE = donut_test$se[1],
      P_value = donut_test$pv[1]
    ))
  }, error = function(e) {
    cat("Error with donut size", d, "for bad economy:", e$message, "\n")
  })
}

# Print and save donut hole results
if (requireNamespace("knitr", quietly = TRUE)) {
  knitr::kable(h3_good_economy_donut_results, caption = "H3: Donut-Hole RDD Results (Good Economy)")
  knitr::kable(h3_bad_economy_donut_results, caption = "H3: Donut-Hole RDD Results (Bad Economy)")
}

write.csv(h3_good_economy_donut_results, "h3_good_economy_donut_results.csv", row.names = FALSE)
write.csv(h3_bad_economy_donut_results, "h3_bad_economy_donut_results.csv", row.names = FALSE)

## 3.23 Visual RDD Plots for H3 (GDP Growth)
# Create clear RDD plots for main paper
h3_high_gdp_rdd_plot <- plot_rdd(
  data = clean_data_high_gdp,
  x_var = "centered_lagged_pervote_samlet",
  y_var = "miljø_afhængig",
  group_var = "factor_lagged_i_parlament",
  x_limit = 10,
  x_label = "Green Party Vote Share (centered at threshold)",
  y_label = "Climate Position",
  title = "Effect Under High GDP Growth"
)

h3_low_gdp_rdd_plot <- plot_rdd(
  data = clean_data_low_gdp,
  x_var = "centered_lagged_pervote_samlet",
  y_var = "miljø_afhængig",
  group_var = "factor_lagged_i_parlament",
  x_limit = 10,
  x_label = "Green Party Vote Share (centered at threshold)",
  y_label = "Climate Position",
  title = "Effect Under Low GDP Growth"
)

# Save RDD plots
ggsave("h3_high_gdp_rdd_plot.png", plot = h3_high_gdp_rdd_plot, width = 10, height = 6, dpi = 300)
ggsave("h3_low_gdp_rdd_plot.png", plot = h3_low_gdp_rdd_plot, width = 10, height = 6, dpi = 300)

# Create zoomed-in versions for better threshold visualization
h3_high_gdp_rdd_zoom <- jump_plot_cutoff(
  data = clean_data_high_gdp,
  force_var = "centered_lagged_pervote_samlet",
  y_var = "miljø_afhængig",
  group_var = "factor_lagged_i_parlament",
  polynomial = 1,
  window = 3
)

h3_low_gdp_rdd_zoom <- jump_plot_cutoff(
  data = clean_data_low_gdp,
  force_var = "centered_lagged_pervote_samlet",
  y_var = "miljø_afhængig",
  group_var = "factor_lagged_i_parlament",
  polynomial = 1,
  window = 3
)

# Save zoomed RDD plots
ggsave("h3_high_gdp_rdd_zoom.png", plot = h3_high_gdp_rdd_zoom, width = 10, height = 6, dpi = 300)
ggsave("h3_low_gdp_rdd_zoom.png", plot = h3_low_gdp_rdd_zoom, width = 10, height = 6, dpi = 300)

## 3.24 Visual RDD Plots for H3 (Economic Index)
h3_good_economy_rdd_plot <- plot_rdd(
  data = clean_data_good_economy,
  x_var = "centered_lagged_pervote_samlet",
  y_var = "miljø_afhængig",
  group_var = "factor_lagged_i_parlament",
  x_limit = 10,
  x_label = "Green Party Vote Share (centered at threshold)",
  y_label = "Climate Position",
  title = "Effect Under Good Economic Conditions"
)

h3_bad_economy_rdd_plot <- plot_rdd(
  data = clean_data_bad_economy,
  x_var = "centered_lagged_pervote_samlet",
  y_var = "miljø_afhængig",
  group_var = "factor_lagged_i_parlament",
  x_limit = 10,
  x_label = "Green Party Vote Share (centered at threshold)",
  y_label = "Climate Position",
  title = "Effect Under Poor Economic Conditions"
)

# Save RDD plots
ggsave("h3_good_economy_rdd_plot.png", plot = h3_good_economy_rdd_plot, width = 10, height = 6, dpi = 300)
ggsave("h3_bad_economy_rdd_plot.png", plot = h3_bad_economy_rdd_plot, width = 10, height = 6, dpi = 300)

# Create zoomed-in versions for better threshold visualization
h3_good_economy_rdd_zoom <- jump_plot_cutoff(
  data = clean_data_good_economy,
  force_var = "centered_lagged_pervote_samlet",
  y_var = "miljø_afhængig",
  group_var = "factor_lagged_i_parlament",
  polynomial = 1,
  window = 3
)

h3_bad_economy_rdd_zoom <- jump_plot_cutoff(
  data = clean_data_bad_economy,
  force_var = "centered_lagged_pervote_samlet",
  y_var = "miljø_afhængig",
  group_var = "factor_lagged_i_parlament",
  polynomial = 1,
  window = 3
)

# Save zoomed RDD plots
ggsave("h3_good_economy_rdd_zoom.png", plot = h3_good_economy_rdd_zoom, width = 10, height = 6, dpi = 300)
ggsave("h3_bad_economy_rdd_zoom.png", plot = h3_bad_economy_rdd_zoom, width = 10, height = 6, dpi = 300)

## 3.25 Combined Visual Comparison for H3
# Combine GDP growth plots in a single figure
if (requireNamespace("gridExtra", quietly = TRUE)) {
  h3_gdp_combined <- gridExtra::grid.arrange(
    h3_high_gdp_rdd_plot, h3_low_gdp_rdd_plot,
    ncol = 2,
    top = "H3: Effect of Green Party Entry by GDP Growth"
  )
  
  h3_economy_combined <- gridExtra::grid.arrange(
    h3_good_economy_rdd_plot, h3_bad_economy_rdd_plot,
    ncol = 2,
    top = "H3: Effect of Green Party Entry by Economic Conditions"
  )
  
  # Save combined plots
  ggsave("h3_gdp_combined.png", plot = h3_gdp_combined, width = 12, height = 6, dpi = 300)
  ggsave("h3_economy_combined.png", plot = h3_economy_combined, width = 12, height = 6, dpi = 300)
}

## 3.26 Outcome Placebo Tests for H3 (GDP Growth)
# Using variables that shouldn't be affected by treatment
placebo_vars <- c("rile_lowe", "per410") 

# High GDP Growth
h3_high_gdp_outcome_placebo <- run_outcome_placebo_test(
  data = clean_data_high_gdp,
  real_outcome_var = "miljø_afhængig",
  placebo_outcome_vars = placebo_vars,
  running_var = "centered_lagged_pervote_samlet",
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)

h3_high_gdp_outcome_placebo_plot <- plot_outcome_placebo_test(
  h3_high_gdp_outcome_placebo,
  title = "H3: Outcome Placebo Test (High GDP Growth)"
)

# Low GDP Growth
h3_low_gdp_outcome_placebo <- run_outcome_placebo_test(
  data = clean_data_low_gdp,
  real_outcome_var = "miljø_afhængig",
  placebo_outcome_vars = placebo_vars,
  running_var = "centered_lagged_pervote_samlet",
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)

h3_low_gdp_outcome_placebo_plot <- plot_outcome_placebo_test(
  h3_low_gdp_outcome_placebo,
  title = "H3: Outcome Placebo Test (Low GDP Growth)"
)

# Save outcome placebo plots
ggsave("h3_high_gdp_outcome_placebo.png", plot = h3_high_gdp_outcome_placebo_plot, width = 8, height = 6, dpi = 300)
ggsave("h3_low_gdp_outcome_placebo.png", plot = h3_low_gdp_outcome_placebo_plot, width = 8, height = 6, dpi = 300)

## 3.27 Summary of Test Results for H3
# Create summary table of all H3 test results
h3_test_summary <- data.frame(
  Subgroup = c(
    "High GDP Growth",
    "Low GDP Growth",
    "Good Economic Conditions",
    "Poor Economic Conditions"
  ),
  Main_RDD_Effect = c(
    # Extract from main rdrobust results if available or NA if not
    tryCatch(sprintf("%.3f (p=%.3f)", 
                  summary(rdrobust(
                    y = clean_data_high_gdp$miljø_afhængig,
                    x = clean_data_high_gdp$centered_lagged_pervote_samlet,
                    c = 0, p = 1, h = 2, kernel = "triangular"
                  ))$Estimate[1], 
                  summary(rdrobust(
                    y = clean_data_high_gdp$miljø_afhængig,
                    x = clean_data_high_gdp$centered_lagged_pervote_samlet,
                    c = 0, p = 1, h = 2, kernel = "triangular"
                  ))$pv[1]), error = function(e) "N/A"),
    
    tryCatch(sprintf("%.3f (p=%.3f)", 
                  summary(rdrobust(
                    y = clean_data_low_gdp$miljø_afhængig,
                    x = clean_data_low_gdp$centered_lagged_pervote_samlet,
                    c = 0, p = 1, h = 2, kernel = "triangular"
                  ))$Estimate[1], 
                  summary(rdrobust(
                    y = clean_data_low_gdp$miljø_afhængig,
                    x = clean_data_low_gdp$centered_lagged_pervote_samlet,
                    c = 0, p = 1, h = 2, kernel = "triangular"
                  ))$pv[1]), error = function(e) "N/A"),
    
    tryCatch(sprintf("%.3f (p=%.3f)", 
                  summary(rdrobust(
                    y = clean_data_good_economy$miljø_afhængig,
                    x = clean_data_good_economy$centered_lagged_pervote_samlet,
                    c = 0, p = 1, h = 2, kernel = "triangular"
                  ))$Estimate[1], 
                  summary(rdrobust(
                    y = clean_data_good_economy$miljø_afhængig,
                    x = clean_data_good_economy$centered_lagged_pervote_samlet,
                    c = 0, p = 1, h = 2, kernel = "triangular"
                  ))$pv[1]), error = function(e) "N/A"),
    
    tryCatch(sprintf("%.3f (p=%.3f)", 
                  summary(rdrobust(
                    y = clean_data_bad_economy$miljø_afhængig,
                    x = clean_data_bad_economy$centered_lagged_pervote_samlet,
                    c = 0, p = 1, h = 2, kernel = "triangular"
                  ))$Estimate[1], 
                  summary(rdrobust(
                    y = clean_data_bad_economy$miljø_afhængig,
                    x = clean_data_bad_economy$centered_lagged_pervote_samlet,
                    c = 0, p = 1, h = 2, kernel = "triangular"
                  ))$pv[1]), error = function(e) "N/A")
  ),
  Placebo_p_value = c(
    h3_high_gdp_placebo$empirical_p_value,
    h3_low_gdp_placebo$empirical_p_value,
    h3_good_economy_placebo$empirical_p_value,
    h3_bad_economy_placebo$empirical_p_value
  ),
  Density_p_value = c(
    h3_high_gdp_density_summary$p_value,
    h3_low_gdp_density_summary$p_value,
    h3_good_economy_density_summary$p_value,
    h3_bad_economy_density_summary$p_value
  ),
  Permutation_p_value = c(
    h3_high_gdp_permutation$p_value_effect,
    h3_low_gdp_permutation$p_value_effect,
    h3_good_economy_permutation$p_value_effect,
    h3_bad_economy_permutation$p_value_effect
  )
)

# Print and save summary table
if (requireNamespace("knitr", quietly = TRUE)) {
  knitr::kable(h3_test_summary, 
              caption = "H3: Summary of Test Results by Economic Conditions")
}

write.csv(h3_test_summary, "h3_test_summary.csv", row.names = FALSE)

## 3.28 Compare treatment effects across economic conditions
# Extract main estimates and create comparison plot
h3_comparison_data <- data.frame(
  Condition = c("High GDP Growth", "Low GDP Growth", "Good Economy", "Poor Economy"),
  Estimate = c(
    tryCatch(summary(rdrobust(
      y = clean_data_high_gdp$miljø_afhængig,
      x = clean_data_high_gdp$centered_lagged_pervote_samlet,
      c = 0, p = 1, h = 2, kernel = "triangular"
    ))$Estimate[1], error = function(e) NA),
    
    tryCatch(summary(rdrobust(
      y = clean_data_low_gdp$miljø_afhængig,
      x = clean_data_low_gdp$centered_lagged_pervote_samlet,
      c = 0, p = 1, h = 2, kernel = "triangular"
    ))$Estimate[1], error = function(e) NA),
    
    tryCatch(summary(rdrobust(
      y = clean_data_good_economy$miljø_afhængig,
      x = clean_data_good_economy$centered_lagged_pervote_samlet,
      c = 0, p = 1, h = 2, kernel = "triangular"
    ))$Estimate[1], error = function(e) NA),
    
    tryCatch(summary(rdrobust(
      y = clean_data_bad_economy$miljø_afhængig,
      x = clean_data_bad_economy$centered_lagged_pervote_samlet,
      c = 0, p = 1, h = 2, kernel = "triangular"
    ))$Estimate[1], error = function(e) NA)
  ),
  SE = c(
    tryCatch(summary(rdrobust(
      y = clean_data_high_gdp$miljø_afhængig,
      x = clean_data_high_gdp$centered_lagged_pervote_samlet,
      c = 0, p = 1, h = 2, kernel = "triangular"
    ))$se[1], error = function(e) NA),
    
    tryCatch(summary(rdrobust(
      y = clean_data_low_gdp$miljø_afhængig,
      x = clean_data_low_gdp$centered_lagged_pervote_samlet,
      c = 0, p = 1, h = 2, kernel = "triangular"
    ))$se[1], error = function(e) NA),
    
    tryCatch(summary(rdrobust(
      y = clean_data_good_economy$miljø_afhængig,
      x = clean_data_good_economy$centered_lagged_pervote_samlet,
      c = 0, p = 1, h = 2, kernel = "triangular"
    ))$se[1], error = function(e) NA),
    
    tryCatch(summary(rdrobust(
      y = clean_data_bad_economy$miljø_afhængig,
      x = clean_data_bad_economy$centered_lagged_pervote_samlet,
      c = 0, p = 1, h = 2, kernel = "triangular"
    ))$se[1], error = function(e) NA)
  )
)

# Create dot-whisker plot
h3_comparison_plot <- ggplot(h3_comparison_data, aes(x = Estimate, y = Condition)) +
  geom_point(size = 3) +
  geom_errorbarh(aes(xmin = Estimate - 1.96*SE, xmax = Estimate + 1.96*SE), height = 0.2) +
  geom_vline(xintercept = 0, linetype = "dashed", color = "red") +
  labs(
    title = "H3: Treatment Effects by Economic Conditions",
    x = "Estimated Effect (with 95% CI)",
    y = ""
  ) +
  theme_minimal()

# Save comparison plot
ggsave("h3_treatment_effects_comparison.png", plot = h3_comparison_plot, width = 10, height = 6, dpi = 300)

# ============================================================================
# 4. H4: PARTY IDEOLOGY EFFECT
# ============================================================================

## 4.1 Prepare Data for H4
# Split data based on party ideology
left_parties <- subset(clean_data, left_party == 1 & !is.na(miljø_afhængig))
right_parties <- subset(clean_data, left_party == 0 & !is.na(miljø_afhængig))

## 4.2 Coefficient Stability Plots for H4
left_party_stability_plot <- create_coefficient_stability_plot(
  data = left_parties,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomials = c(1, 2, 3),
  covariates = c("country", "edate"),
  title = "H4: Effect on Left-wing Parties"
)

right_party_stability_plot <- create_coefficient_stability_plot(
  data = right_parties,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomials = c(1, 2, 3),
  covariates = c("country", "edate"),
  title = "H4: Effect on Right-wing Parties"
)

# Save plots
pdf("h4_left_party_stability.pdf", width = 10, height = 6)
print(left_party_stability_plot$plot)
dev.off()

pdf("h4_right_party_stability.pdf", width = 10, height = 6)
print(right_party_stability_plot$plot)
dev.off()

## 4.3 Direct Comparison of Party Ideology Effects
h4_ideology_comparison_plot <- compare_coefficient_stability(
  data_list = list(left_parties, right_parties),
  labels = c("Left-wing Parties", "Right-wing Parties"),
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomial = 1,
  covariates = c("country", "edate"),
  title = "H4: Effect of Green Parties Moderated by Party Ideology"
)

# Save comparison plot
ggsave("h4_ideology_comparison.png", plot = h4_ideology_comparison_plot, width = 10, height = 6, dpi = 300)

## 4.4 Multi-polynomial Comparisons
# Ideology with different polynomial orders
h4_comparison_plot_p1 <- compare_coefficient_stability(
  data_list = list(left_parties, right_parties),
  labels = c("Left-wing Parties", "Right-wing Parties"),
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomial = 1,
  covariates = c("country", "edate"),
  title = "H4: Effect of Green Parties (Polynomial Order 1)"
)

h4_comparison_plot_p2 <- compare_coefficient_stability(
  data_list = list(left_parties, right_parties),
  labels = c("Left-wing Parties", "Right-wing Parties"),
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomial = 2,
  covariates = c("country", "edate"),
  title = "H4: Effect of Green Parties (Polynomial Order 2)"
)

# Combine plots in grid if gridExtra is available
if (requireNamespace("gridExtra", quietly = TRUE)) {
  ideology_poly_comparison <- gridExtra::grid.arrange(
    h4_comparison_plot_p1, h4_comparison_plot_p2,
    ncol = 2,
    top = "H4: Effect of Green Parties Moderated by Party Ideology"
  )
  
  # Save the combined plot
  ggsave("h4_ideology_polynomial_comparison.png", ideology_poly_comparison, width = 12, height = 6, dpi = 300)
}

## 4.5 Placebo Threshold Tests for H4 (Party Ideology)
h4_left_placebo <- run_placebo_threshold_test(
  data = left_parties,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  true_cutpoint = 0,
  placebo_range = c(-4, 4),
  placebo_step = 0.5,
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)

h4_right_placebo <- run_placebo_threshold_test(
  data = right_parties,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  true_cutpoint = 0,
  placebo_range = c(-4, 4),
  placebo_step = 0.5,
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)

# Plot placebo results
h4_left_placebo_plot <- plot_placebo_threshold_test(
  h4_left_placebo,
  title = "H4: Placebo Test (Left-wing Parties)"
)

h4_right_placebo_plot <- plot_placebo_threshold_test(
  h4_right_placebo,
  title = "H4: Placebo Test (Right-wing Parties)"
)

# Save placebo plots
ggsave("h4_left_placebo.png", plot = h4_left_placebo_plot, width = 10, height = 6, dpi = 300)
ggsave("h4_right_placebo.png", plot = h4_right_placebo_plot, width = 10, height = 6, dpi = 300)

## 4.6 Density Tests for H4 (Party Ideology)
# Add McCrary density test for left-wing parties
h4_left_density_test <- rddensity(left_parties$centered_lagged_pervote_samlet, c = 0)
h4_left_density_summary <- summary(h4_left_density_test)
h4_left_density_plot <- rdplotdensity(h4_left_density_test, 
                                    left_parties$centered_lagged_pervote_samlet,
                                    title = "H4: Density Test (Left-wing Parties)")

# Add McCrary density test for right-wing parties
h4_right_density_test <- rddensity(right_parties$centered_lagged_pervote_samlet, c = 0)
h4_right_density_summary <- summary(h4_right_density_test)
h4_right_density_plot <- rdplotdensity(h4_right_density_test, 
                                     right_parties$centered_lagged_pervote_samlet,
                                     title = "H4: Density Test (Right-wing Parties)")

# Save density plots
ggsave("h4_left_density.png", plot = h4_left_density_plot$Estplot, width = 10, height = 6, dpi = 300)
ggsave("h4_right_density.png", plot = h4_right_density_plot$Estplot, width = 10, height = 6, dpi = 300)

## 4.7 Covariate Balance Tests for H4 (Party Ideology)
# Define covariates to check
h4_balance_covariates <- c("rile_lowe", "GDP_per_capita", "Unemployment", "avg_pervote_main")

# Left-wing Parties
h4_left_balance_results <- data.frame(
  Covariate = character(),
  RDD_Estimate = numeric(),
  Std_Error = numeric(),
  P_value = numeric()
)

for (cov in h4_balance_covariates) {
  if (cov %in% names(left_parties)) {
    tryCatch({
      balance_check <- rdrobust(
        y = left_parties[[cov]],
        x = left_parties$centered_lagged_pervote_samlet,
        c = 0,
        p = 1,
        kernel = "triangular",
        bwselect = "mserd"
      )
      
      h4_left_balance_results <- rbind(h4_left_balance_results, data.frame(
        Covariate = cov,
        RDD_Estimate = balance_check$Estimate[1],
        Std_Error = balance_check$se[1],
        P_value = balance_check$pv[1]
      ))
    }, error = function(e) {
      cat("Error checking balance for", cov, "in left-wing parties:", e$message, "\n")
    })
  }
}

# Right-wing Parties
h4_right_balance_results <- data.frame(
  Covariate = character(),
  RDD_Estimate = numeric(),
  Std_Error = numeric(),
  P_value = numeric()
)

for (cov in h4_balance_covariates) {
  if (cov %in% names(right_parties)) {
    tryCatch({
      balance_check <- rdrobust(
        y = right_parties[[cov]],
        x = right_parties$centered_lagged_pervote_samlet,
        c = 0,
        p = 1,
        kernel = "triangular",
        bwselect = "mserd"
      )
      
      h4_right_balance_results <- rbind(h4_right_balance_results, data.frame(
        Covariate = cov,
        RDD_Estimate = balance_check$Estimate[1],
        Std_Error = balance_check$se[1],
        P_value = balance_check$pv[1]
      ))
    }, error = function(e) {
      cat("Error checking balance for", cov, "in right-wing parties:", e$message, "\n")
    })
  }
}

# Print and save balance test results
if (requireNamespace("knitr", quietly = TRUE)) {
  knitr::kable(h4_left_balance_results, caption = "H4: Covariate Balance Tests (Left-wing Parties)")
  knitr::kable(h4_right_balance_results, caption = "H4: Covariate Balance Tests (Right-wing Parties)")
}

write.csv(h4_left_balance_results, "h4_left_balance_tests.csv", row.names = FALSE)
write.csv(h4_right_balance_results, "h4_right_balance_tests.csv", row.names = FALSE)

## 4.8 Permutation Tests for H4 (Party Ideology)
h4_left_permutation <- run_permutation_test(
  data = left_parties,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  polynomial = 1,
  bandwidth = 2,
  n_permutations = 500,
  covariates = c("country", "edate")
)

h4_right_permutation <- run_permutation_test(
  data = right_parties,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  polynomial = 1,
  bandwidth = 2,
  n_permutations = 500,
  covariates = c("country", "edate")
)

# Plot permutation test results
h4_left_permutation_plot <- plot_permutation_test(
  h4_left_permutation,
  title = "H4: Permutation Test (Left-wing Parties)"
)

h4_right_permutation_plot <- plot_permutation_test(
  h4_right_permutation,
  title = "H4: Permutation Test (Right-wing Parties)"
)

# Save permutation plots
ggsave("h4_left_permutation.png", plot = h4_left_permutation_plot, width = 8, height = 6, dpi = 300)
ggsave("h4_right_permutation.png", plot = h4_right_permutation_plot, width = 8, height = 6, dpi = 300)

## 4.9 Two-Part Model for Zero-Inflation in H4 (Party Ideology)
h4_left_two_part <- create_two_part_model_visualization(
  data = left_parties,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)

h4_right_two_part <- create_two_part_model_visualization(
  data = right_parties,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)

# Save two-part model plots
ggsave("h4_left_two_part.png", plot = h4_left_two_part, width = 10, height = 8, dpi = 300)
ggsave("h4_right_two_part.png", plot = h4_right_two_part, width = 10, height = 8, dpi = 300)

## 4.10 Quantile Regression Analysis for H4 (Party Ideology)
h4_left_quantile_effect <- create_quantile_effect_plot(
  data = left_parties,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  quantiles = seq(0.1, 0.9, by = 0.1),
  covariates = c("country", "edate"),
  title = "H4: Heterogeneous Effects Across Quantiles (Left-wing Parties)"
)

h4_right_quantile_effect <- create_quantile_effect_plot(
  data = right_parties,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  treatment_var = "lagged_i_parlament",
  quantiles = seq(0.1, 0.9, by = 0.1),
  covariates = c("country", "edate"),
  title = "H4: Heterogeneous Effects Across Quantiles (Right-wing Parties)"
)

# Save quantile effects plots
ggsave("h4_left_quantile_effects.png", plot = h4_left_quantile_effect, width = 10, height = 6, dpi = 300)
ggsave("h4_right_quantile_effects.png", plot = h4_right_quantile_effect, width = 10, height = 6, dpi = 300)

## 4.11 Kernel Sensitivity for H4 (Party Ideology)
# Test sensitivity to different kernel functions
kernels <- c("triangular", "uniform", "epanechnikov")

# Left-wing Parties
h4_left_kernel_results <- data.frame(
  Kernel = character(),
  Estimate = numeric(),
  SE = numeric(),
  P_value = numeric()
)

for (k in kernels) {
  tryCatch({
    kernel_test <- rdrobust(
      y = left_parties$miljø_afhængig,
      x = left_parties$centered_lagged_pervote_samlet,
      c = 0,
      p = 1,
      kernel = k,
      h = 2
    )
    h4_left_kernel_results <- rbind(h4_left_kernel_results, data.frame(
      Kernel = k,
      Estimate = kernel_test$Estimate[1],
      SE = kernel_test$se[1],
      P_value = kernel_test$pv[1]
    ))
  }, error = function(e) {
    cat("Error with kernel", k, "for left-wing parties:", e$message, "\n")
  })
}

# Right-wing Parties
h4_right_kernel_results <- data.frame(
  Kernel = character(),
  Estimate = numeric(),
  SE = numeric(),
  P_value = numeric()
)

for (k in kernels) {
  tryCatch({
    kernel_test <- rdrobust(
      y = right_parties$miljø_afhængig,
      x = right_parties$centered_lagged_pervote_samlet,
      c = 0,
      p = 1,
      kernel = k,
      h = 2
    )
    h4_right_kernel_results <- rbind(h4_right_kernel_results, data.frame(
      Kernel = k,
      Estimate = kernel_test$Estimate[1],
      SE = kernel_test$se[1],
      P_value = kernel_test$pv[1]
    ))
  }, error = function(e) {
    cat("Error with kernel", k, "for right-wing parties:", e$message, "\n")
  })
}

# Print and save kernel sensitivity results
if (requireNamespace("knitr", quietly = TRUE)) {
  knitr::kable(h4_left_kernel_results, caption = "H4: Kernel Sensitivity (Left-wing Parties)")
  knitr::kable(h4_right_kernel_results, caption = "H4: Kernel Sensitivity (Right-wing Parties)")
}

write.csv(h4_left_kernel_results, "h4_left_kernel_sensitivity.csv", row.names = FALSE)
write.csv(h4_right_kernel_results, "h4_right_kernel_sensitivity.csv", row.names = FALSE)

## 4.12 Donut-Hole RDD for H4 (Party Ideology)
# Remove observations very close to threshold
donut_sizes <- c(0.1, 0.2, 0.3)

# Left-wing Parties
h4_left_donut_results <- data.frame(
  Donut_Size = numeric(),
  Estimate = numeric(),
  SE = numeric(),
  P_value = numeric()
)

for (d in donut_sizes) {
  donut_data <- subset(left_parties, abs(centered_lagged_pervote_samlet) > d)
  tryCatch({
    donut_test <- rdrobust(
      y = donut_data$miljø_afhængig,
      x = donut_data$centered_lagged_pervote_samlet,
      c = 0,
      p = 1,
      kernel = "triangular",
      h = 2
    )
    h4_left_donut_results <- rbind(h4_left_donut_results, data.frame(
      Donut_Size = d,
      Estimate = donut_test$Estimate[1],
      SE = donut_test$se[1],
      P_value = donut_test$pv[1]
    ))
  }, error = function(e) {
    cat("Error with donut size", d, "for left-wing parties:", e$message, "\n")
  })
}

# Right-wing Parties
h4_right_donut_results <- data.frame(
  Donut_Size = numeric(),
  Estimate = numeric(),
  SE = numeric(),
  P_value = numeric()
)

for (d in donut_sizes) {
  donut_data <- subset(right_parties, abs(centered_lagged_pervote_samlet) > d)
  tryCatch({
    donut_test <- rdrobust(
      y = donut_data$miljø_afhængig,
      x = donut_data$centered_lagged_pervote_samlet,
      c = 0,
      p = 1,
      kernel = "triangular",
      h = 2
    )
    h4_right_donut_results <- rbind(h4_right_donut_results, data.frame(
      Donut_Size = d,
      Estimate = donut_test$Estimate[1],
      SE = donut_test$se[1],
      P_value = donut_test$pv[1]
    ))
  }, error = function(e) {
    cat("Error with donut size", d, "for right-wing parties:", e$message, "\n")
  })
}

# Print and save donut hole results
if (requireNamespace("knitr", quietly = TRUE)) {
  knitr::kable(h4_left_donut_results, caption = "H4: Donut-Hole RDD Results (Left-wing Parties)")
  knitr::kable(h4_right_donut_results, caption = "H4: Donut-Hole RDD Results (Right-wing Parties)")
}

write.csv(h4_left_donut_results, "h4_left_donut_results.csv", row.names = FALSE)
write.csv(h4_right_donut_results, "h4_right_donut_results.csv", row.names = FALSE)

## 4.13 Visual RDD Plots for H4 (Party Ideology)
# Create clear RDD plots for main paper
h4_left_rdd_plot <- plot_rdd(
  data = left_parties,
  x_var = "centered_lagged_pervote_samlet",
  y_var = "miljø_afhængig",
  group_var = "factor_lagged_i_parlament",
  x_limit = 10,
  x_label = "Green Party Vote Share (centered at threshold)",
  y_label = "Climate Position",
  title = "Effect on Left-wing Parties"
)

h4_right_rdd_plot <- plot_rdd(
  data = right_parties,
  x_var = "centered_lagged_pervote_samlet",
  y_var = "miljø_afhængig",
  group_var = "factor_lagged_i_parlament",
  x_limit = 10,
  x_label = "Green Party Vote Share (centered at threshold)",
  y_label = "Climate Position",
  title = "Effect on Right-wing Parties"
)

# Save RDD plots
ggsave("h4_left_rdd_plot.png", plot = h4_left_rdd_plot, width = 10, height = 6, dpi = 300)
ggsave("h4_right_rdd_plot.png", plot = h4_right_rdd_plot, width = 10, height = 6, dpi = 300)

# Create zoomed-in versions for better threshold visualization
h4_left_rdd_zoom <- jump_plot_cutoff(
  data = left_parties,
  force_var = "centered_lagged_pervote_samlet",
  y_var = "miljø_afhængig",
  group_var = "factor_lagged_i_parlament",
  polynomial = 1,
  window = 3
)

h4_right_rdd_zoom <- jump_plot_cutoff(
  data = right_parties,
  force_var = "centered_lagged_pervote_samlet",
  y_var = "miljø_afhængig",
  group_var = "factor_lagged_i_parlament",
  polynomial = 1,
  window = 3
)

# Save zoomed RDD plots
ggsave("h4_left_rdd_zoom.png", plot = h4_left_rdd_zoom, width = 10, height = 6, dpi = 300)
ggsave("h4_right_rdd_zoom.png", plot = h4_right_rdd_zoom, width = 10, height = 6, dpi = 300)

## 4.14 Combined Visual Comparison for H4
# Combine ideology plots in a single figure
if (requireNamespace("gridExtra", quietly = TRUE)) {
  h4_ideology_combined <- gridExtra::grid.arrange(
    h4_left_rdd_plot, h4_right_rdd_plot,
    ncol = 2,
    top = "H4: Effect of Green Party Entry by Party Ideology"
  )
  
  # Save combined plots
  ggsave("h4_ideology_combined.png", plot = h4_ideology_combined, width = 12, height = 6, dpi = 300)
}

## 4.15 Outcome Placebo Tests for H4 (Party Ideology)
# Using variables that shouldn't be affected by treatment
placebo_vars <- c("rile_lowe", "per410") 

# Left-wing Parties
h4_left_outcome_placebo <- run_outcome_placebo_test(
  data = left_parties,
  real_outcome_var = "miljø_afhængig",
  placebo_outcome_vars = placebo_vars,
  running_var = "centered_lagged_pervote_samlet",
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)

h4_left_outcome_placebo_plot <- plot_outcome_placebo_test(
  h4_left_outcome_placebo,
  title = "H4: Outcome Placebo Test (Left-wing Parties)"
)

# Right-wing Parties
h4_right_outcome_placebo <- run_outcome_placebo_test(
  data = right_parties,
  real_outcome_var = "miljø_afhængig",
  placebo_outcome_vars = placebo_vars,
  running_var = "centered_lagged_pervote_samlet",
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)

h4_right_outcome_placebo_plot <- plot_outcome_placebo_test(
  h4_right_outcome_placebo,
  title = "H4: Outcome Placebo Test (Right-wing Parties)"
)

# Save outcome placebo plots
ggsave("h4_left_outcome_placebo.png", plot = h4_left_outcome_placebo_plot, width = 8, height = 6, dpi = 300)
ggsave("h4_right_outcome_placebo.png", plot = h4_right_outcome_placebo_plot, width = 8, height = 6, dpi = 300)

## 4.16 Summary of Test Results for H4
# Create summary table of all H4 test results
h4_test_summary <- data.frame(
  Subgroup = c(
    "Left-wing Parties",
    "Right-wing Parties"
  ),
  Main_RDD_Effect = c(
    # Extract from main rdrobust results if available or NA if not
    tryCatch(sprintf("%.3f (p=%.3f)", 
                  summary(rdrobust(
                    y = left_parties$miljø_afhængig,
                    x = left_parties$centered_lagged_pervote_samlet,
                    c = 0, p = 1, h = 2, kernel = "triangular"
                  ))$Estimate[1], 
                  summary(rdrobust(
                    y = left_parties$miljø_afhængig,
                    x = left_parties$centered_lagged_pervote_samlet,
                    c = 0, p = 1, h = 2, kernel = "triangular"
                  ))$pv[1]), error = function(e) "N/A"),
    
    tryCatch(sprintf("%.3f (p=%.3f)", 
                  summary(rdrobust(
                    y = right_parties$miljø_afhængig,
                    x = right_parties$centered_lagged_pervote_samlet,
                    c = 0, p = 1, h = 2, kernel = "triangular"
                  ))$Estimate[1], 
                  summary(rdrobust(
                    y = right_parties$miljø_afhængig,
                    x = right_parties$centered_lagged_pervote_samlet,
                    c = 0, p = 1, h = 2, kernel = "triangular"
                  ))$pv[1]), error = function(e) "N/A")
  ),
  Placebo_p_value = c(
    h4_left_placebo$empirical_p_value,
    h4_right_placebo$empirical_p_value
  ),
  Density_p_value = c(
    h4_left_density_summary$p_value,
    h4_right_density_summary$p_value
  ),
  Permutation_p_value = c(
    h4_left_permutation$p_value_effect,
    h4_right_permutation$p_value_effect
  )
)

# Print and save summary table
if (requireNamespace("knitr", quietly = TRUE)) {
  knitr::kable(h4_test_summary, 
              caption = "H4: Summary of Test Results by Party Ideology")
}

write.csv(h4_test_summary, "h4_test_summary.csv", row.names = FALSE)

## 4.17 Compare treatment effects across ideologies
# Extract main estimates and create comparison plot
h4_comparison_data <- data.frame(
  Ideology = c("Left-wing Parties", "Right-wing Parties"),
  Estimate = c(
    tryCatch(summary(rdrobust(
      y = left_parties$miljø_afhængig,
      x = left_parties$centered_lagged_pervote_samlet,
      c = 0, p = 1, h = 2, kernel = "triangular"
    ))$Estimate[1], error = function(e) NA),
    
    tryCatch(summary(rdrobust(
      y = right_parties$miljø_afhængig,
      x = right_parties$centered_lagged_pervote_samlet,
      c = 0, p = 1, h = 2, kernel = "triangular"
    ))$Estimate[1], error = function(e) NA)
  ),
  SE = c(
    tryCatch(summary(rdrobust(
      y = left_parties$miljø_afhængig,
      x = left_parties$centered_lagged_pervote_samlet,
      c = 0, p = 1, h = 2, kernel = "triangular"
    ))$se[1], error = function(e) NA),
    
    tryCatch(summary(rdrobust(
      y = right_parties$miljø_afhængig,
      x = right_parties$centered_lagged_pervote_samlet,
      c = 0, p = 1, h = 2, kernel = "triangular"
    ))$se[1], error = function(e) NA)
  )
)

# Create dot-whisker plot
h4_comparison_plot <- ggplot(h4_comparison_data, aes(x = Estimate, y = Condition)) +
  geom_point(size = 3) +
  geom_errorbarh(aes(xmin = Estimate - 1.96*SE, xmax = Estimate + 1.96*SE), height = 0.2) +
  geom_vline(xintercept = 0, linetype = "dashed", color = "red") +
  labs(
    title = "H4: Treatment Effects by Ideology",
    x = "Estimated Effect (with 95% CI)",
    y = ""
  ) +
  theme_minimal()

# Save comparison plot
ggsave("h3_treatment_effects_comparison.png", plot = h3_comparison_plot, width = 10, height = 6, dpi = 300)

# ============================================================================
# 5. H5: PARTY SIZE EFFECT
# ============================================================================
# 5.1 Prepare Data for H5 ----------------
large_parties <- subset(clean_data, large_party == 1)
small_parties <- subset(clean_data, large_party == 0)

## 5.2 Coefficient Stability Plots for H5
large_party_stability_plot <- create_coefficient_stability_plot(
  data = large_parties,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomials = c(1, 2, 3),
  covariates = c("country", "edate"),
  title = "H5: Effect on Large Parties"
)

small_party_stability_plot <- create_coefficient_stability_plot(
  data = small_parties,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomials = c(1, 2, 3),
  covariates = c("country", "edate"),
  title = "H5: Effect on Small Parties"
)

# Save plots
pdf("h5_large_party_stability_plot.pdf", width = 10, height = 6)
print(large_party_stability_plot$plot)
dev.off()

pdf("h5_small_party_stability.pdf", width = 10, height = 6)
print(small_party_stability_plot$plot)
dev.off()

# 5.3 Prepare Data for H5 ----------------
h5_size_comparison_plot <- compare_coefficient_stability(
  data_list = list(large_parties, small_parties),
  labels = c("Large Parties", "Small Parties"),
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomial = 1,
  covariates = c("country", "edate"),
  title = "H4: Effect of Green Parties Moderated by Party Size"
)

# Save comparison plot
ggsave("h5_size_comparison.png", plot = h4_ideology_comparison_plot, width = 10, height = 6, dpi = 300)

# 5.4 Multi-polynomial Comparisons ----------------
# Ideology with different polynomial orders
h5_comparison_plot_p1 <- compare_coefficient_stability(
  data_list = list(large_parties, small_parties),
  labels = c("Large Parties", "Small Parties"),
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomial = 1,
  covariates = c("country", "edate"),
  title = "H5: Effect of Green Parties (Polynomial Order 1)"
)

h5_comparison_plot_p2 <- compare_coefficient_stability(
  data_list = list(large_parties, small_parties),
  labels = c("Large Parties", "Small Parties"),
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  bw_list = seq(1, 3, by = 0.5),
  polynomial = 2,
  covariates = c("country", "edate"),
  title = "H5: Effect of Green Parties (Polynomial Order 2)"
)

# Combine plots in grid if gridExtra is available
if (requireNamespace("gridExtra", quietly = TRUE)) {
  size_poly_comparison <- gridExtra::grid.arrange(
    h5_comparison_plot_p1, h5_comparison_plot_p2,
    ncol = 2,
    top = "H5: Effect of Green Parties Moderated by Party Size"
  )
  
  # Save the combined plot
  ggsave("h5_size_polynomial_comparison.png", ideology_poly_comparison, width = 12, height = 6, dpi = 300)
}

# 5.5 Placebo Threshold Tests for H5 (Party Size) ----------------
h5_large_placebo <- run_placebo_threshold_test(
  data = large_parties,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  true_cutpoint = 0,
  placebo_range = c(-4, 4),
  placebo_step = 0.5,
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)

h5_small_placebo <- run_placebo_threshold_test(
  data = small_parties,
  outcome_var = "miljø_afhængig",
  running_var = "centered_lagged_pervote_samlet",
  true_cutpoint = 0,
  placebo_range = c(-4, 4),
  placebo_step = 0.5,
  polynomial = 1,
  bandwidth = 2,
  covariates = c("country", "edate")
)

# Plot placebo results
h5_large_placebo_plot <- plot_placebo_threshold_test(
  h5_large_placebo,
  title = "H5: Placebo Test (Large Parties)"
)

h5_small_placebo_plot <- plot_placebo_threshold_test(
  h5_small_placebo,
  title = "H5: Placebo Test (Small Parties)"
)

# Save placebo plots
ggsave("h5_large_placebo_plot.png", plot = h5_large_placebo_plot, width = 10, height = 6, dpi = 300)
ggsave("h5_small_placebo_plot.png", plot = h5_small_placebo_plot, width = 10, height = 6, dpi = 300)

# 5.6 Density Tests for H4 (Party Size) ----------------
# Add McCrary density test for large parties
h5_large_density_test <- rddensity(large_parties$centered_lagged_pervote_samlet, c = 0)
h5_large_density_summary <- summary(h5_large_density_test)
h5_large_density_plot <- rdplotdensity(h5_large_density_test, 
                                    large_parties$centered_lagged_pervote_samlet,
                                    title = "H5: Density Test (Large Parties)")

# Add McCrary density test for right-wing parties
h5_small_density_test <- rddensity(small_parties$centered_lagged_pervote_samlet, c = 0)
h5_small_density_summary <- summary(h5_small_density_test)
h5_small_density_plot <- rdplotdensity(h5_small_density_test, 
                                     small_parties$centered_lagged_pervote_samlet,
                                     title = "H5: Density Test (Small Parties)")

# Save density plots
ggsave("h5_large_density.png", plot = h5_large_density_plot$Estplot, width = 10, height = 6, dpi = 300)
ggsave("h5_small_density.png", plot = h5_small_density_plot$Estplot, width = 10, height = 6, dpi = 300)

# 5.7 Covariate Balance Tests for H5 (Party Size) ----------------
# Define covariates to check
h5_balance_covariates <- c("rile_lowe", "avg_pervote_main")

# Left-wing Parties
h4_left_balance_results <- data.frame(
  Covariate = character(),
  RDD_Estimate = numeric(),
  Std_Error = numeric(),
  P_value = numeric()
)

for (cov in h4_balance_covariates) {
  if (cov %in% names(left_parties)) {
    tryCatch({
      balance_check <- rdrobust(
        y = left_parties[[cov]],
        x = left_parties$centered_lagged_pervote_samlet,
        c = 0,
        p = 1,
        kernel = "triangular",
        bwselect = "mserd"
      )
      
      h4_left_balance_results <- rbind(h4_left_balance_results, data.frame(
        Covariate = cov,
        RDD_Estimate = balance_check$Estimate[1],
        Std_Error = balance_check$se[1],
        P_value = balance_check$pv[1]
      ))
    }, error = function(e) {
      cat("Error checking balance for", cov, "in left-wing parties:", e$message, "\n")
    })
  }
}

# Right-wing Parties
h4_right_balance_results <- data.frame(
  Covariate = character(),
  RDD_Estimate = numeric(),
  Std_Error = numeric(),
  P_value = numeric()
)

for (cov in h4_balance_covariates) {
  if (cov %in% names(right_parties)) {
    tryCatch({
      balance_check <- rdrobust(
        y = right_parties[[cov]],
        x = right_parties$centered_lagged_pervote_samlet,
        c = 0,
        p = 1,
        kernel = "triangular",
        bwselect = "mserd"
      )
      
      h4_right_balance_results <- rbind(h4_right_balance_results, data.frame(
        Covariate = cov,
        RDD_Estimate = balance_check$Estimate[1],
        Std_Error = balance_check$se[1],
        P_value = balance_check$pv[1]
      ))
    }, error = function(e) {
      cat("Error checking balance for", cov, "in right-wing parties:", e$message, "\n")
    })
  }
}

# Print and save balance test results
if (requireNamespace("knitr", quietly = TRUE)) {
  knitr::kable(h4_left_balance_results, caption = "H4: Covariate Balance Tests (Left-wing Parties)")
  knitr::kable(h4_right_balance_results, caption = "H4: Covariate Balance Tests (Right-wing Parties)")
}

write.csv(h4_left_balance_results, "h4_left_balance_tests.csv", row.names = FALSE)
write.csv(h4_right_balance_results, "h4_right_balance_tests.csv", row.names = FALSE)

# ============================================================================
# 6. SUMMARY OF RESULTS
# ============================================================================

# Create tables summarizing placebo p-values, permutation p-values, etc.
placebo_summary <- data.frame(
  Model = c(
    "H1: All parties",
    "H2: No radical right parties",
    "H2: With radical right parties",
    # Continue with all models
  ),
  Placebo_p_value = c(
    h1_placebo_threshold$empirical_p_value,
    h2_no_rrp_placebo$empirical_p_value,
    h2_with_rrp_placebo$empirical_p_value,
    # Continue with all values
  )
)
print(placebo_summary)
write.csv(placebo_summary, "placebo_summary.csv", row.names = FALSE)

# Similar summaries for permutation tests, density tests, etc.
